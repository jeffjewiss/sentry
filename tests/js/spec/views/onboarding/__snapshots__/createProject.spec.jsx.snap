// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateProject should block if you have access to no teams 1`] = `
<Fragment>
  <div
    data-test-id="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      Create a new Project
    </PageHeading>
    <HelpText>
      Projects allow you to scope events to a specific application in
               your organization. For example, you might have separate projects
               for your API server and frontend client.
    </HelpText>
    <PlatformPicker
      platform=""
      setPlatform={[Function]}
      showOther={true}
    />
    <CreateProjectForm
      onSubmit={[Function]}
    >
      <div>
        <FormLabel>
          Give your project a name
        </FormLabel>
        <ProjectNameInput>
          <ProjectPlatformicon
            monoTone={true}
            platform=""
          />
          <input
            autoComplete="off"
            label="Project Name"
            name="name"
            onChange={[Function]}
            placeholder="Project name"
            type="text"
            value=""
          />
        </ProjectNameInput>
      </div>
      <div>
        <FormLabel>
          Assign a Team
        </FormLabel>
        <TeamSelectInput>
          <SelectControl
            clearable={false}
            height={36}
            multiple={false}
            name="select-team"
            onChange={[Function]}
            options={Array []}
            placeholder="Select a Team"
            value={0}
          />
          <Tooltip
            title="Create a team"
          >
            <Button
              borderless={true}
              disabled={false}
              icon="icon-circle-add"
              onClick={[Function]}
              type="button"
            />
          </Tooltip>
        </TeamSelectInput>
      </div>
      <div>
        <Button
          disabled={true}
          priority="primary"
        >
          Create Project
        </Button>
      </div>
    </CreateProjectForm>
  </div>
</Fragment>
`;

exports[`CreateProject should deal with incorrect platform name if its provided by url 1`] = `
<CreateProject
  location={
    Object {
      "query": Object {},
    }
  }
  nextStepUrl={[Function]}
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "testOrg",
      "projectId": "",
    }
  }
  teams={Array []}
>
  <div
    data-test-id="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      <Wrapper
        withMargins={true}
      >
        <h1
          className="css-13ev48w-Wrapper e1f8hk460"
        >
          Create a new Project
        </h1>
      </Wrapper>
    </PageHeading>
    <HelpText>
      <p
        className="css-15uvbvk-HelpText eovdm175"
      >
        Projects allow you to scope events to a specific application in
               your organization. For example, you might have separate projects
               for your API server and frontend client.
      </p>
    </HelpText>
    <PlatformPicker
      platform=""
      setPlatform={[Function]}
      showOther={true}
    >
      <NavContainer>
        <div
          className="css-xl0stt-NavContainer ewlrg790"
        >
          <CategoryNav>
            <NavTabs
              className="css-5tazcq-CategoryNav ewlrg792"
            >
              <ul
                className="nav nav-tabs css-5tazcq-CategoryNav ewlrg792"
              >
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="popular"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className="active"
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Popular
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="browser"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Browser
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="server"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Server
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="mobile"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Mobile
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="desktop"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Desktop
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="all"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        All
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </CategoryNav>
          <SearchBar>
            <div
              className="css-1e5tau1-SearchBar-inputStyles ewlrg791"
            >
              <InlineSvg
                src="icon-search"
              >
                <StyledSvg
                  height="1em"
                  viewBox={Object {}}
                  width="1em"
                >
                  <svg
                    className="css-ryh69w-StyledSvg e2idor0"
                    height="1em"
                    viewBox={Object {}}
                    width="1em"
                  >
                    <use
                      href="#test"
                      xlinkHref="#test"
                    />
                  </svg>
                </StyledSvg>
              </InlineSvg>
              <input
                label="Filter Platforms"
                onChange={[Function]}
                placeholder="Filter Platforms"
                type="text"
                value=""
              />
            </div>
          </SearchBar>
        </div>
      </NavContainer>
      <PlatformList>
        <div
          className="css-545rh6-PlatformList ewlrg793"
        >
          <PlatformCard
            key="csharp"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "csharp",
                "language": "csharp",
                "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                "name": "C#",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "csharp",
                  "language": "csharp",
                  "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                  "name": "C#",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="csharp"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="csharp"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-csharp csharp csharp"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  C#
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="java"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "java",
                "language": "java",
                "link": "https://docs.getsentry.com/hosted/clients/java/",
                "name": "Java",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "java",
                  "language": "java",
                  "link": "https://docs.getsentry.com/hosted/clients/java/",
                  "name": "Java",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="java"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="java"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-java java java"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Java
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="javascript-angular"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript-angular",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
                "name": "Angular",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript-angular",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
                  "name": "Angular",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="javascript-angular"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="javascript-angular"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-javascript-angular javascript javascript-angular"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Angular
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="javascript"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
                "name": "JavaScript",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
                  "name": "JavaScript",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="javascript"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="javascript"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-javascript javascript javascript"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  JavaScript
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="javascript-react"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript-react",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
                "name": "React",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript-react",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
                  "name": "React",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="javascript-react"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="javascript-react"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-javascript-react javascript javascript-react"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  React
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="node-express"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "node-express",
                "language": "node",
                "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
                "name": "Express",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "node-express",
                  "language": "node",
                  "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
                  "name": "Express",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="node-express"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="node-express"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-node-express node node-express"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Express
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="node"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "node",
                "language": "node",
                "link": "https://docs.getsentry.com/hosted/clients/node/",
                "name": "Node.js",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "node",
                  "language": "node",
                  "link": "https://docs.getsentry.com/hosted/clients/node/",
                  "name": "Node.js",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="node"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="node"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-node node node"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Node.js
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="php-laravel"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php-laravel",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
                "name": "Laravel",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php-laravel",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
                  "name": "Laravel",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="php-laravel"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="php-laravel"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-php-laravel php php-laravel"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Laravel
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="php"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/",
                "name": "PHP",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/",
                  "name": "PHP",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="php"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="php"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-php php php"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  PHP
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="php-symfony2"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php-symfony2",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
                "name": "Symfony2",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php-symfony2",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
                  "name": "Symfony2",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="php-symfony2"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="php-symfony2"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-php-symfony2 php php-symfony2"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Symfony2
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="python-django"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python-django",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
                "name": "Django",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python-django",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
                  "name": "Django",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="python-django"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="python-django"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-python-django python python-django"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Django
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="python-flask"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python-flask",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
                "name": "Flask",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python-flask",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
                  "name": "Flask",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="python-flask"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="python-flask"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-python-flask python python-flask"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Flask
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="python"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/",
                "name": "Python",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/",
                  "name": "Python",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="python"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="python"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-python python python"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Python
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="cocoa"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "cocoa",
                "language": "cocoa",
                "link": "https://docs.getsentry.com/hosted/clients/react-native/",
                "name": "React-Native",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "cocoa",
                  "language": "cocoa",
                  "link": "https://docs.getsentry.com/hosted/clients/react-native/",
                  "name": "React-Native",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="cocoa"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="cocoa"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-cocoa cocoa cocoa"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  React-Native
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="ruby-rails"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby-rails",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                "name": "Rails",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby-rails",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                  "name": "Rails",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="ruby-rails"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="ruby-rails"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-ruby-rails ruby ruby-rails"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Rails
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="ruby"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                "name": "Ruby",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                  "name": "Ruby",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="ruby"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="ruby"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-ruby ruby ruby"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Ruby
                </h3>
              </div>
            </Component>
          </PlatformCard>
        </div>
      </PlatformList>
    </PlatformPicker>
    <CreateProjectForm
      onSubmit={[Function]}
    >
      <form
        className="css-1ibxl16-CreateProjectForm eovdm170"
        onSubmit={[Function]}
      >
        <div>
          <FormLabel>
            <div
              className="css-4lvcxw-FormLabel eovdm171"
            >
              Give your project a name
            </div>
          </FormLabel>
          <ProjectNameInput>
            <div
              className="css-1dtytc5-ProjectNameInput-inputStyles eovdm173"
            >
              <ProjectPlatformicon
                monoTone={true}
                platform=""
              >
                <Component
                  className="css-32xv6c-PlatformiconTile-getIconOverrides-ProjectPlatformicon eovdm172"
                  monoTone={true}
                  platform=""
                >
                  <div
                    className="css-32xv6c-PlatformiconTile-getIconOverrides-ProjectPlatformicon eovdm172 platformicon platformicon-"
                  />
                </Component>
              </ProjectPlatformicon>
              <input
                autoComplete="off"
                label="Project Name"
                name="name"
                onChange={[Function]}
                placeholder="Project name"
                type="text"
                value=""
              />
            </div>
          </ProjectNameInput>
        </div>
        <div>
          <FormLabel>
            <div
              className="css-4lvcxw-FormLabel eovdm171"
            >
              Assign a Team
            </div>
          </FormLabel>
          <TeamSelectInput>
            <div
              className="css-75pel-TeamSelectInput eovdm174"
            >
              <SelectControl
                clearable={false}
                height={36}
                multiple={false}
                name="select-team"
                onChange={[Function]}
                options={Array []}
                placeholder="Select a Team"
                value={0}
              >
                <StyledSelect
                  arrowRenderer={[Function]}
                  backspaceRemoves={false}
                  clearable={false}
                  deleteRemoves={false}
                  height={36}
                  multiple={false}
                  name="select-team"
                  onChange={[Function]}
                  options={Array []}
                  placeholder="Select a Team"
                  value={0}
                >
                  <ForwardRef(SelectPicker)
                    arrowRenderer={[Function]}
                    backspaceRemoves={false}
                    className="css-6lbkok-StyledSelect eho28m20"
                    clearable={false}
                    deleteRemoves={false}
                    height={36}
                    multiple={false}
                    name="select-team"
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Select a Team"
                    value={0}
                  >
                    <SelectPicker
                      arrowRenderer={[Function]}
                      backspaceRemoves={false}
                      className="css-6lbkok-StyledSelect eho28m20"
                      clearable={false}
                      deleteRemoves={false}
                      forwardedRef={null}
                      height={36}
                      multiple={false}
                      name="select-team"
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Select a Team"
                      value={0}
                    >
                      <Select
                        arrowRenderer={[Function]}
                        autosize={true}
                        backspaceRemoves={false}
                        backspaceToRemoveMessage="Press backspace to remove {label}"
                        className="css-6lbkok-StyledSelect eho28m20"
                        clearAllText="Clear all"
                        clearRenderer={[Function]}
                        clearValueText="Clear value"
                        clearable={false}
                        closeOnSelect={true}
                        deleteRemoves={false}
                        delimiter=","
                        disabled={false}
                        escapeClearsValue={true}
                        filterOptions={[Function]}
                        height={36}
                        ignoreAccents={true}
                        ignoreCase={true}
                        inputProps={Object {}}
                        isLoading={false}
                        joinValues={false}
                        labelKey="label"
                        matchPos="any"
                        matchProp="any"
                        menuBuffer={0}
                        menuRenderer={[Function]}
                        multi={false}
                        multiple={false}
                        name="select-team"
                        noResultsText="No results found"
                        onBlurResetsInput={true}
                        onChange={[Function]}
                        onCloseResetsInput={true}
                        onSelectResetsInput={true}
                        openOnClick={true}
                        optionComponent={[Function]}
                        options={Array []}
                        pageSize={5}
                        placeholder="Select a Team"
                        removeSelected={true}
                        required={false}
                        rtl={false}
                        scrollMenuIntoView={true}
                        searchable={true}
                        simpleValue={false}
                        tabSelectsValue={true}
                        trimFilter={true}
                        value={0}
                        valueComponent={[Function]}
                        valueKey="value"
                      >
                        <div
                          className="Select css-6lbkok-StyledSelect eho28m20 is-searchable Select--single"
                        >
                          <div
                            className="Select-control"
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                          >
                            <span
                              className="Select-multi-value-wrapper"
                              id="react-select-5--value"
                            >
                              <div
                                className="Select-placeholder"
                              >
                                Select a Team
                              </div>
                              <AutosizeInput
                                aria-activedescendant="react-select-5--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                className="Select-input"
                                injectStyles={true}
                                minWidth="5"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                value=""
                              >
                                <div
                                  className="Select-input"
                                  style={
                                    Object {
                                      "display": "inline-block",
                                    }
                                  }
                                >
                                  <input
                                    aria-activedescendant="react-select-5--value"
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    aria-owns=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    role="combobox"
                                    style={
                                      Object {
                                        "boxSizing": "content-box",
                                        "width": "5px",
                                      }
                                    }
                                    value=""
                                  />
                                  <div
                                    style={
                                      Object {
                                        "height": 0,
                                        "left": 0,
                                        "overflow": "scroll",
                                        "position": "absolute",
                                        "top": 0,
                                        "visibility": "hidden",
                                        "whiteSpace": "pre",
                                      }
                                    }
                                  />
                                </div>
                              </AutosizeInput>
                            </span>
                            <span
                              className="Select-arrow-zone"
                              onMouseDown={[Function]}
                            >
                              <span
                                className="icon-arrow-down"
                              />
                            </span>
                          </div>
                        </div>
                      </Select>
                    </SelectPicker>
                  </ForwardRef(SelectPicker)>
                </StyledSelect>
              </SelectControl>
              <Tooltip
                title="Create a team"
              >
                <Button
                  borderless={true}
                  className="tip"
                  disabled={false}
                  icon="icon-circle-add"
                  onClick={[Function]}
                  title="Create a team"
                  type="button"
                >
                  <Tooltip
                    title="Create a team"
                  >
                    <StyledButton
                      aria-disabled={false}
                      borderless={true}
                      className="tip tip"
                      disabled={false}
                      onClick={[Function]}
                      role="button"
                      title="Create a team"
                      type="button"
                    >
                      <Component
                        aria-disabled={false}
                        className="tip tip css-1v8ytf5-StyledButton-getColors eqrebog0"
                        onClick={[Function]}
                        role="button"
                        title="Create a team"
                        type="button"
                      >
                        <button
                          aria-disabled={false}
                          className="tip tip css-1v8ytf5-StyledButton-getColors eqrebog0"
                          onClick={[Function]}
                          role="button"
                          title="Create a team"
                          type="button"
                        >
                          <ButtonLabel
                            borderless={true}
                          >
                            <Component
                              borderless={true}
                              className="css-uthd1f-ButtonLabel eqrebog1"
                            >
                              <span
                                className="css-uthd1f-ButtonLabel eqrebog1"
                              >
                                <Icon
                                  hasChildren={false}
                                >
                                  <Component
                                    className="css-ljhpxy-Icon eqrebog2"
                                    hasChildren={false}
                                  >
                                    <span
                                      className="css-ljhpxy-Icon eqrebog2"
                                    >
                                      <StyledInlineSvg
                                        size="16px"
                                        src="icon-circle-add"
                                      >
                                        <InlineSvg
                                          className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                          size="16px"
                                          src="icon-circle-add"
                                        >
                                          <StyledSvg
                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                            height="16px"
                                            viewBox={Object {}}
                                            width="16px"
                                          >
                                            <svg
                                              className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                              height="16px"
                                              viewBox={Object {}}
                                              width="16px"
                                            >
                                              <use
                                                href="#test"
                                                xlinkHref="#test"
                                              />
                                            </svg>
                                          </StyledSvg>
                                        </InlineSvg>
                                      </StyledInlineSvg>
                                    </span>
                                  </Component>
                                </Icon>
                              </span>
                            </Component>
                          </ButtonLabel>
                        </button>
                      </Component>
                    </StyledButton>
                  </Tooltip>
                </Button>
              </Tooltip>
            </div>
          </TeamSelectInput>
        </div>
        <div>
          <Button
            disabled={true}
            priority="primary"
          >
            <StyledButton
              aria-disabled={true}
              aria-label="Create Project"
              disabled={true}
              href={null}
              onClick={[Function]}
              priority="primary"
              role="button"
              to={null}
            >
              <Component
                aria-disabled={true}
                aria-label="Create Project"
                className="css-bo8dlg-StyledButton-getColors eqrebog0"
                href={null}
                onClick={[Function]}
                role="button"
                to={null}
              >
                <button
                  aria-disabled={true}
                  aria-label="Create Project"
                  className="css-bo8dlg-StyledButton-getColors eqrebog0"
                  href={null}
                  onClick={[Function]}
                  role="button"
                  to={null}
                >
                  <ButtonLabel
                    priority="primary"
                  >
                    <Component
                      className="css-ga4b18-ButtonLabel eqrebog1"
                      priority="primary"
                    >
                      <span
                        className="css-ga4b18-ButtonLabel eqrebog1"
                      >
                        Create Project
                      </span>
                    </Component>
                  </ButtonLabel>
                </button>
              </Component>
            </StyledButton>
          </Button>
        </div>
      </form>
    </CreateProjectForm>
  </div>
</CreateProject>
`;

exports[`CreateProject should fill in platform name if its provided by url 1`] = `
<CreateProject
  location={
    Object {
      "query": Object {},
    }
  }
  nextStepUrl={[Function]}
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "testOrg",
      "projectId": "",
    }
  }
  teams={Array []}
>
  <div
    data-test-id="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      <Wrapper
        withMargins={true}
      >
        <h1
          className="css-13ev48w-Wrapper e1f8hk460"
        >
          Create a new Project
        </h1>
      </Wrapper>
    </PageHeading>
    <HelpText>
      <p
        className="css-15uvbvk-HelpText eovdm175"
      >
        Projects allow you to scope events to a specific application in
               your organization. For example, you might have separate projects
               for your API server and frontend client.
      </p>
    </HelpText>
    <PlatformPicker
      platform="ruby"
      setPlatform={[Function]}
      showOther={true}
    >
      <NavContainer>
        <div
          className="css-xl0stt-NavContainer ewlrg790"
        >
          <CategoryNav>
            <NavTabs
              className="css-5tazcq-CategoryNav ewlrg792"
            >
              <ul
                className="nav nav-tabs css-5tazcq-CategoryNav ewlrg792"
              >
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="popular"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Popular
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="browser"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Browser
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="server"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Server
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="mobile"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Mobile
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="desktop"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Desktop
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="all"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className="active"
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        All
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </CategoryNav>
          <SearchBar>
            <div
              className="css-1e5tau1-SearchBar-inputStyles ewlrg791"
            >
              <InlineSvg
                src="icon-search"
              >
                <StyledSvg
                  height="1em"
                  viewBox={Object {}}
                  width="1em"
                >
                  <svg
                    className="css-ryh69w-StyledSvg e2idor0"
                    height="1em"
                    viewBox={Object {}}
                    width="1em"
                  >
                    <use
                      href="#test"
                      xlinkHref="#test"
                    />
                  </svg>
                </StyledSvg>
              </InlineSvg>
              <input
                label="Filter Platforms"
                onChange={[Function]}
                placeholder="Filter Platforms"
                type="text"
                value="ruby"
              />
            </div>
          </SearchBar>
        </div>
      </NavContainer>
      <PlatformList>
        <div
          className="css-545rh6-PlatformList ewlrg793"
        >
          <PlatformCard
            key="ruby-rack"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby-rack",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/",
                "name": "Rack",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby-rack",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/",
                  "name": "Rack",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="ruby-rack"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="ruby-rack"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-ruby-rack ruby ruby-rack"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Rack
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="ruby-rails"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby-rails",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                "name": "Rails",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby-rails",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                  "name": "Rails",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="ruby-rails"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="ruby-rails"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-ruby-rails ruby ruby-rails"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Rails
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="ruby"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                "name": "Ruby",
                "type": "language",
              }
            }
            selected={true}
          >
            <Component
              className="css-1cijq0m-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                  "name": "Ruby",
                  "type": "language",
                }
              }
              selected={true}
            >
              <div
                className="css-1cijq0m-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="ruby"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="ruby"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-ruby ruby ruby"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Ruby
                </h3>
                <ClearButton
                  onClick={[Function]}
                >
                  <Component
                    className="css-9ldjwa-ClearButton ewlrg795"
                    onClick={[Function]}
                  >
                    <Button
                      borderless={true}
                      className="css-9ldjwa-ClearButton ewlrg795"
                      disabled={false}
                      icon="icon-circle-close"
                      onClick={[Function]}
                      size="xsmall"
                    >
                      <StyledButton
                        aria-disabled={false}
                        borderless={true}
                        className="css-9ldjwa-ClearButton ewlrg795"
                        disabled={false}
                        onClick={[Function]}
                        role="button"
                        size="xsmall"
                      >
                        <Component
                          aria-disabled={false}
                          className="ewlrg795 css-2lxdh0-StyledButton-getColors-ClearButton eqrebog0"
                          onClick={[Function]}
                          role="button"
                          size="xsmall"
                        >
                          <button
                            aria-disabled={false}
                            className="ewlrg795 css-2lxdh0-StyledButton-getColors-ClearButton eqrebog0"
                            onClick={[Function]}
                            role="button"
                            size="xsmall"
                          >
                            <ButtonLabel
                              borderless={true}
                              size="xsmall"
                            >
                              <Component
                                borderless={true}
                                className="css-10ltac7-ButtonLabel eqrebog1"
                                size="xsmall"
                              >
                                <span
                                  className="css-10ltac7-ButtonLabel eqrebog1"
                                >
                                  <Icon
                                    hasChildren={false}
                                    size="xsmall"
                                  >
                                    <Component
                                      className="css-ljhpxy-Icon eqrebog2"
                                      hasChildren={false}
                                      size="xsmall"
                                    >
                                      <span
                                        className="css-ljhpxy-Icon eqrebog2"
                                        size="xsmall"
                                      >
                                        <StyledInlineSvg
                                          size="12px"
                                          src="icon-circle-close"
                                        >
                                          <InlineSvg
                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                            size="12px"
                                            src="icon-circle-close"
                                          >
                                            <StyledSvg
                                              className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                              height="12px"
                                              viewBox={Object {}}
                                              width="12px"
                                            >
                                              <svg
                                                className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                height="12px"
                                                viewBox={Object {}}
                                                width="12px"
                                              >
                                                <use
                                                  href="#test"
                                                  xlinkHref="#test"
                                                />
                                              </svg>
                                            </StyledSvg>
                                          </InlineSvg>
                                        </StyledInlineSvg>
                                      </span>
                                    </Component>
                                  </Icon>
                                </span>
                              </Component>
                            </ButtonLabel>
                          </button>
                        </Component>
                      </StyledButton>
                    </Button>
                  </Component>
                </ClearButton>
              </div>
            </Component>
          </PlatformCard>
        </div>
      </PlatformList>
    </PlatformPicker>
    <CreateProjectForm
      onSubmit={[Function]}
    >
      <form
        className="css-1ibxl16-CreateProjectForm eovdm170"
        onSubmit={[Function]}
      >
        <div>
          <FormLabel>
            <div
              className="css-4lvcxw-FormLabel eovdm171"
            >
              Give your project a name
            </div>
          </FormLabel>
          <ProjectNameInput>
            <div
              className="css-1dtytc5-ProjectNameInput-inputStyles eovdm173"
            >
              <ProjectPlatformicon
                monoTone={true}
                platform="ruby"
              >
                <Component
                  className="css-32xv6c-PlatformiconTile-getIconOverrides-ProjectPlatformicon eovdm172"
                  monoTone={true}
                  platform="ruby"
                >
                  <div
                    className="css-32xv6c-PlatformiconTile-getIconOverrides-ProjectPlatformicon eovdm172 platformicon platformicon-ruby ruby ruby"
                  />
                </Component>
              </ProjectPlatformicon>
              <input
                autoComplete="off"
                label="Project Name"
                name="name"
                onChange={[Function]}
                placeholder="Project name"
                type="text"
                value="Ruby"
              />
            </div>
          </ProjectNameInput>
        </div>
        <div>
          <FormLabel>
            <div
              className="css-4lvcxw-FormLabel eovdm171"
            >
              Assign a Team
            </div>
          </FormLabel>
          <TeamSelectInput>
            <div
              className="css-75pel-TeamSelectInput eovdm174"
            >
              <SelectControl
                clearable={false}
                height={36}
                multiple={false}
                name="select-team"
                onChange={[Function]}
                options={Array []}
                placeholder="Select a Team"
                value={0}
              >
                <StyledSelect
                  arrowRenderer={[Function]}
                  backspaceRemoves={false}
                  clearable={false}
                  deleteRemoves={false}
                  height={36}
                  multiple={false}
                  name="select-team"
                  onChange={[Function]}
                  options={Array []}
                  placeholder="Select a Team"
                  value={0}
                >
                  <ForwardRef(SelectPicker)
                    arrowRenderer={[Function]}
                    backspaceRemoves={false}
                    className="css-6lbkok-StyledSelect eho28m20"
                    clearable={false}
                    deleteRemoves={false}
                    height={36}
                    multiple={false}
                    name="select-team"
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Select a Team"
                    value={0}
                  >
                    <SelectPicker
                      arrowRenderer={[Function]}
                      backspaceRemoves={false}
                      className="css-6lbkok-StyledSelect eho28m20"
                      clearable={false}
                      deleteRemoves={false}
                      forwardedRef={null}
                      height={36}
                      multiple={false}
                      name="select-team"
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Select a Team"
                      value={0}
                    >
                      <Select
                        arrowRenderer={[Function]}
                        autosize={true}
                        backspaceRemoves={false}
                        backspaceToRemoveMessage="Press backspace to remove {label}"
                        className="css-6lbkok-StyledSelect eho28m20"
                        clearAllText="Clear all"
                        clearRenderer={[Function]}
                        clearValueText="Clear value"
                        clearable={false}
                        closeOnSelect={true}
                        deleteRemoves={false}
                        delimiter=","
                        disabled={false}
                        escapeClearsValue={true}
                        filterOptions={[Function]}
                        height={36}
                        ignoreAccents={true}
                        ignoreCase={true}
                        inputProps={Object {}}
                        isLoading={false}
                        joinValues={false}
                        labelKey="label"
                        matchPos="any"
                        matchProp="any"
                        menuBuffer={0}
                        menuRenderer={[Function]}
                        multi={false}
                        multiple={false}
                        name="select-team"
                        noResultsText="No results found"
                        onBlurResetsInput={true}
                        onChange={[Function]}
                        onCloseResetsInput={true}
                        onSelectResetsInput={true}
                        openOnClick={true}
                        optionComponent={[Function]}
                        options={Array []}
                        pageSize={5}
                        placeholder="Select a Team"
                        removeSelected={true}
                        required={false}
                        rtl={false}
                        scrollMenuIntoView={true}
                        searchable={true}
                        simpleValue={false}
                        tabSelectsValue={true}
                        trimFilter={true}
                        value={0}
                        valueComponent={[Function]}
                        valueKey="value"
                      >
                        <div
                          className="Select css-6lbkok-StyledSelect eho28m20 is-searchable Select--single"
                        >
                          <div
                            className="Select-control"
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                          >
                            <span
                              className="Select-multi-value-wrapper"
                              id="react-select-4--value"
                            >
                              <div
                                className="Select-placeholder"
                              >
                                Select a Team
                              </div>
                              <AutosizeInput
                                aria-activedescendant="react-select-4--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                className="Select-input"
                                injectStyles={true}
                                minWidth="5"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                value=""
                              >
                                <div
                                  className="Select-input"
                                  style={
                                    Object {
                                      "display": "inline-block",
                                    }
                                  }
                                >
                                  <input
                                    aria-activedescendant="react-select-4--value"
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    aria-owns=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    role="combobox"
                                    style={
                                      Object {
                                        "boxSizing": "content-box",
                                        "width": "5px",
                                      }
                                    }
                                    value=""
                                  />
                                  <div
                                    style={
                                      Object {
                                        "height": 0,
                                        "left": 0,
                                        "overflow": "scroll",
                                        "position": "absolute",
                                        "top": 0,
                                        "visibility": "hidden",
                                        "whiteSpace": "pre",
                                      }
                                    }
                                  />
                                </div>
                              </AutosizeInput>
                            </span>
                            <span
                              className="Select-arrow-zone"
                              onMouseDown={[Function]}
                            >
                              <span
                                className="icon-arrow-down"
                              />
                            </span>
                          </div>
                        </div>
                      </Select>
                    </SelectPicker>
                  </ForwardRef(SelectPicker)>
                </StyledSelect>
              </SelectControl>
              <Tooltip
                title="Create a team"
              >
                <Button
                  borderless={true}
                  className="tip"
                  disabled={false}
                  icon="icon-circle-add"
                  onClick={[Function]}
                  title="Create a team"
                  type="button"
                >
                  <Tooltip
                    title="Create a team"
                  >
                    <StyledButton
                      aria-disabled={false}
                      borderless={true}
                      className="tip tip"
                      disabled={false}
                      onClick={[Function]}
                      role="button"
                      title="Create a team"
                      type="button"
                    >
                      <Component
                        aria-disabled={false}
                        className="tip tip css-1v8ytf5-StyledButton-getColors eqrebog0"
                        onClick={[Function]}
                        role="button"
                        title="Create a team"
                        type="button"
                      >
                        <button
                          aria-disabled={false}
                          className="tip tip css-1v8ytf5-StyledButton-getColors eqrebog0"
                          onClick={[Function]}
                          role="button"
                          title="Create a team"
                          type="button"
                        >
                          <ButtonLabel
                            borderless={true}
                          >
                            <Component
                              borderless={true}
                              className="css-uthd1f-ButtonLabel eqrebog1"
                            >
                              <span
                                className="css-uthd1f-ButtonLabel eqrebog1"
                              >
                                <Icon
                                  hasChildren={false}
                                >
                                  <Component
                                    className="css-ljhpxy-Icon eqrebog2"
                                    hasChildren={false}
                                  >
                                    <span
                                      className="css-ljhpxy-Icon eqrebog2"
                                    >
                                      <StyledInlineSvg
                                        size="16px"
                                        src="icon-circle-add"
                                      >
                                        <InlineSvg
                                          className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                          size="16px"
                                          src="icon-circle-add"
                                        >
                                          <StyledSvg
                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                            height="16px"
                                            viewBox={Object {}}
                                            width="16px"
                                          >
                                            <svg
                                              className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                              height="16px"
                                              viewBox={Object {}}
                                              width="16px"
                                            >
                                              <use
                                                href="#test"
                                                xlinkHref="#test"
                                              />
                                            </svg>
                                          </StyledSvg>
                                        </InlineSvg>
                                      </StyledInlineSvg>
                                    </span>
                                  </Component>
                                </Icon>
                              </span>
                            </Component>
                          </ButtonLabel>
                        </button>
                      </Component>
                    </StyledButton>
                  </Tooltip>
                </Button>
              </Tooltip>
            </div>
          </TeamSelectInput>
        </div>
        <div>
          <Button
            disabled={true}
            priority="primary"
          >
            <StyledButton
              aria-disabled={true}
              aria-label="Create Project"
              disabled={true}
              href={null}
              onClick={[Function]}
              priority="primary"
              role="button"
              to={null}
            >
              <Component
                aria-disabled={true}
                aria-label="Create Project"
                className="css-bo8dlg-StyledButton-getColors eqrebog0"
                href={null}
                onClick={[Function]}
                role="button"
                to={null}
              >
                <button
                  aria-disabled={true}
                  aria-label="Create Project"
                  className="css-bo8dlg-StyledButton-getColors eqrebog0"
                  href={null}
                  onClick={[Function]}
                  role="button"
                  to={null}
                >
                  <ButtonLabel
                    priority="primary"
                  >
                    <Component
                      className="css-ga4b18-ButtonLabel eqrebog1"
                      priority="primary"
                    >
                      <span
                        className="css-ga4b18-ButtonLabel eqrebog1"
                      >
                        Create Project
                      </span>
                    </Component>
                  </ButtonLabel>
                </button>
              </Component>
            </StyledButton>
          </Button>
        </div>
      </form>
    </CreateProjectForm>
  </div>
</CreateProject>
`;

exports[`CreateProject should fill in project name if its empty when platform is chosen 1`] = `
<CreateProject
  location={
    Object {
      "query": Object {},
    }
  }
  nextStepUrl={[Function]}
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "testOrg",
      "projectId": "",
    }
  }
  teams={Array []}
>
  <div
    data-test-id="onboarding-info"
  >
    <PageHeading
      withMargins={true}
    >
      <Wrapper
        withMargins={true}
      >
        <h1
          className="css-13ev48w-Wrapper e1f8hk460"
        >
          Create a new Project
        </h1>
      </Wrapper>
    </PageHeading>
    <HelpText>
      <p
        className="css-15uvbvk-HelpText eovdm175"
      >
        Projects allow you to scope events to a specific application in
               your organization. For example, you might have separate projects
               for your API server and frontend client.
      </p>
    </HelpText>
    <PlatformPicker
      platform="csharp"
      setPlatform={[Function]}
      showOther={true}
    >
      <NavContainer>
        <div
          className="css-xl0stt-NavContainer ewlrg790"
        >
          <CategoryNav>
            <NavTabs
              className="css-5tazcq-CategoryNav ewlrg792"
            >
              <ul
                className="nav nav-tabs css-5tazcq-CategoryNav ewlrg792"
              >
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="popular"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className="active"
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Popular
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="browser"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Browser
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="server"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Server
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="mobile"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Mobile
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="desktop"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        Desktop
                      </a>
                    </Link>
                  </li>
                </ListLink>
                <ListLink
                  activeClassName="active"
                  index={false}
                  isActive={[Function]}
                  key="all"
                  onClick={[Function]}
                  to=""
                >
                  <li
                    className=""
                  >
                    <Link
                      onClick={[Function]}
                      onlyActiveOnIndex={false}
                      style={Object {}}
                      to=""
                    >
                      <a
                        onClick={[Function]}
                        style={Object {}}
                      >
                        All
                      </a>
                    </Link>
                  </li>
                </ListLink>
              </ul>
            </NavTabs>
          </CategoryNav>
          <SearchBar>
            <div
              className="css-1e5tau1-SearchBar-inputStyles ewlrg791"
            >
              <InlineSvg
                src="icon-search"
              >
                <StyledSvg
                  height="1em"
                  viewBox={Object {}}
                  width="1em"
                >
                  <svg
                    className="css-ryh69w-StyledSvg e2idor0"
                    height="1em"
                    viewBox={Object {}}
                    width="1em"
                  >
                    <use
                      href="#test"
                      xlinkHref="#test"
                    />
                  </svg>
                </StyledSvg>
              </InlineSvg>
              <input
                label="Filter Platforms"
                onChange={[Function]}
                placeholder="Filter Platforms"
                type="text"
                value=""
              />
            </div>
          </SearchBar>
        </div>
      </NavContainer>
      <PlatformList>
        <div
          className="css-545rh6-PlatformList ewlrg793"
        >
          <PlatformCard
            key="csharp"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "csharp",
                "language": "csharp",
                "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                "name": "C#",
                "type": "language",
              }
            }
            selected={true}
          >
            <Component
              className="css-1cijq0m-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "csharp",
                  "language": "csharp",
                  "link": "https://docs.getsentry.com/hosted/clients/csharp/",
                  "name": "C#",
                  "type": "language",
                }
              }
              selected={true}
            >
              <div
                className="css-1cijq0m-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="csharp"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="csharp"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-csharp csharp csharp"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  C#
                </h3>
                <ClearButton
                  onClick={[Function]}
                >
                  <Component
                    className="css-9ldjwa-ClearButton ewlrg795"
                    onClick={[Function]}
                  >
                    <Button
                      borderless={true}
                      className="css-9ldjwa-ClearButton ewlrg795"
                      disabled={false}
                      icon="icon-circle-close"
                      onClick={[Function]}
                      size="xsmall"
                    >
                      <StyledButton
                        aria-disabled={false}
                        borderless={true}
                        className="css-9ldjwa-ClearButton ewlrg795"
                        disabled={false}
                        onClick={[Function]}
                        role="button"
                        size="xsmall"
                      >
                        <Component
                          aria-disabled={false}
                          className="ewlrg795 css-2lxdh0-StyledButton-getColors-ClearButton eqrebog0"
                          onClick={[Function]}
                          role="button"
                          size="xsmall"
                        >
                          <button
                            aria-disabled={false}
                            className="ewlrg795 css-2lxdh0-StyledButton-getColors-ClearButton eqrebog0"
                            onClick={[Function]}
                            role="button"
                            size="xsmall"
                          >
                            <ButtonLabel
                              borderless={true}
                              size="xsmall"
                            >
                              <Component
                                borderless={true}
                                className="css-10ltac7-ButtonLabel eqrebog1"
                                size="xsmall"
                              >
                                <span
                                  className="css-10ltac7-ButtonLabel eqrebog1"
                                >
                                  <Icon
                                    hasChildren={false}
                                    size="xsmall"
                                  >
                                    <Component
                                      className="css-ljhpxy-Icon eqrebog2"
                                      hasChildren={false}
                                      size="xsmall"
                                    >
                                      <span
                                        className="css-ljhpxy-Icon eqrebog2"
                                        size="xsmall"
                                      >
                                        <StyledInlineSvg
                                          size="12px"
                                          src="icon-circle-close"
                                        >
                                          <InlineSvg
                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                            size="12px"
                                            src="icon-circle-close"
                                          >
                                            <StyledSvg
                                              className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                              height="12px"
                                              viewBox={Object {}}
                                              width="12px"
                                            >
                                              <svg
                                                className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                height="12px"
                                                viewBox={Object {}}
                                                width="12px"
                                              >
                                                <use
                                                  href="#test"
                                                  xlinkHref="#test"
                                                />
                                              </svg>
                                            </StyledSvg>
                                          </InlineSvg>
                                        </StyledInlineSvg>
                                      </span>
                                    </Component>
                                  </Icon>
                                </span>
                              </Component>
                            </ButtonLabel>
                          </button>
                        </Component>
                      </StyledButton>
                    </Button>
                  </Component>
                </ClearButton>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="java"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "java",
                "language": "java",
                "link": "https://docs.getsentry.com/hosted/clients/java/",
                "name": "Java",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "java",
                  "language": "java",
                  "link": "https://docs.getsentry.com/hosted/clients/java/",
                  "name": "Java",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="java"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="java"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-java java java"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Java
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="javascript-angular"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript-angular",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
                "name": "Angular",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript-angular",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
                  "name": "Angular",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="javascript-angular"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="javascript-angular"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-javascript-angular javascript javascript-angular"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Angular
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="javascript"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
                "name": "JavaScript",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
                  "name": "JavaScript",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="javascript"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="javascript"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-javascript javascript javascript"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  JavaScript
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="javascript-react"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "javascript-react",
                "language": "javascript",
                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
                "name": "React",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "javascript-react",
                  "language": "javascript",
                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
                  "name": "React",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="javascript-react"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="javascript-react"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-javascript-react javascript javascript-react"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  React
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="node-express"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "node-express",
                "language": "node",
                "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
                "name": "Express",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "node-express",
                  "language": "node",
                  "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
                  "name": "Express",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="node-express"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="node-express"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-node-express node node-express"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Express
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="node"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "node",
                "language": "node",
                "link": "https://docs.getsentry.com/hosted/clients/node/",
                "name": "Node.js",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "node",
                  "language": "node",
                  "link": "https://docs.getsentry.com/hosted/clients/node/",
                  "name": "Node.js",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="node"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="node"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-node node node"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Node.js
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="php-laravel"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php-laravel",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
                "name": "Laravel",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php-laravel",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
                  "name": "Laravel",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="php-laravel"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="php-laravel"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-php-laravel php php-laravel"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Laravel
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="php"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/",
                "name": "PHP",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/",
                  "name": "PHP",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="php"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="php"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-php php php"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  PHP
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="php-symfony2"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "php-symfony2",
                "language": "php",
                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
                "name": "Symfony2",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "php-symfony2",
                  "language": "php",
                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
                  "name": "Symfony2",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="php-symfony2"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="php-symfony2"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-php-symfony2 php php-symfony2"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Symfony2
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="python-django"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python-django",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
                "name": "Django",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python-django",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
                  "name": "Django",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="python-django"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="python-django"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-python-django python python-django"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Django
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="python-flask"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python-flask",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
                "name": "Flask",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python-flask",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
                  "name": "Flask",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="python-flask"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="python-flask"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-python-flask python python-flask"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Flask
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="python"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "python",
                "language": "python",
                "link": "https://docs.getsentry.com/hosted/clients/python/",
                "name": "Python",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "python",
                  "language": "python",
                  "link": "https://docs.getsentry.com/hosted/clients/python/",
                  "name": "Python",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="python"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="python"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-python python python"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Python
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="cocoa"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "cocoa",
                "language": "cocoa",
                "link": "https://docs.getsentry.com/hosted/clients/react-native/",
                "name": "React-Native",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "cocoa",
                  "language": "cocoa",
                  "link": "https://docs.getsentry.com/hosted/clients/react-native/",
                  "name": "React-Native",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="cocoa"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="cocoa"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-cocoa cocoa cocoa"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  React-Native
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="ruby-rails"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby-rails",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                "name": "Rails",
                "type": "framework",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby-rails",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
                  "name": "Rails",
                  "type": "framework",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="ruby-rails"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="ruby-rails"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-ruby-rails ruby ruby-rails"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Rails
                </h3>
              </div>
            </Component>
          </PlatformCard>
          <PlatformCard
            key="ruby"
            onClear={[Function]}
            onClick={[Function]}
            platform={
              Object {
                "id": "ruby",
                "language": "ruby",
                "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                "name": "Ruby",
                "type": "language",
              }
            }
            selected={false}
          >
            <Component
              className="css-17pvvqu-PlatformCard ewlrg796"
              onClear={[Function]}
              onClick={[Function]}
              platform={
                Object {
                  "id": "ruby",
                  "language": "ruby",
                  "link": "https://docs.getsentry.com/hosted/clients/ruby/",
                  "name": "Ruby",
                  "type": "language",
                }
              }
              selected={false}
            >
              <div
                className="css-17pvvqu-PlatformCard ewlrg796"
                onClick={[Function]}
              >
                <StyledPlatformiconTile
                  platform="ruby"
                >
                  <Component
                    className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794"
                    platform="ruby"
                  >
                    <div
                      className="css-1he2xme-PlatformiconTile-getIconOverrides-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-getColorStyles-StyledPlatformiconTile ewlrg794 platformicon platformicon-ruby ruby ruby"
                    />
                  </Component>
                </StyledPlatformiconTile>
                <h3>
                  Ruby
                </h3>
              </div>
            </Component>
          </PlatformCard>
        </div>
      </PlatformList>
    </PlatformPicker>
    <CreateProjectForm
      onSubmit={[Function]}
    >
      <form
        className="css-1ibxl16-CreateProjectForm eovdm170"
        onSubmit={[Function]}
      >
        <div>
          <FormLabel>
            <div
              className="css-4lvcxw-FormLabel eovdm171"
            >
              Give your project a name
            </div>
          </FormLabel>
          <ProjectNameInput>
            <div
              className="css-1dtytc5-ProjectNameInput-inputStyles eovdm173"
            >
              <ProjectPlatformicon
                monoTone={true}
                platform="csharp"
              >
                <Component
                  className="css-32xv6c-PlatformiconTile-getIconOverrides-ProjectPlatformicon eovdm172"
                  monoTone={true}
                  platform="csharp"
                >
                  <div
                    className="css-32xv6c-PlatformiconTile-getIconOverrides-ProjectPlatformicon eovdm172 platformicon platformicon-csharp csharp csharp"
                  />
                </Component>
              </ProjectPlatformicon>
              <input
                autoComplete="off"
                label="Project Name"
                name="name"
                onChange={[Function]}
                placeholder="Project name"
                type="text"
                value="another"
              />
            </div>
          </ProjectNameInput>
        </div>
        <div>
          <FormLabel>
            <div
              className="css-4lvcxw-FormLabel eovdm171"
            >
              Assign a Team
            </div>
          </FormLabel>
          <TeamSelectInput>
            <div
              className="css-75pel-TeamSelectInput eovdm174"
            >
              <SelectControl
                clearable={false}
                height={36}
                multiple={false}
                name="select-team"
                onChange={[Function]}
                options={Array []}
                placeholder="Select a Team"
                value={0}
              >
                <StyledSelect
                  arrowRenderer={[Function]}
                  backspaceRemoves={false}
                  clearable={false}
                  deleteRemoves={false}
                  height={36}
                  multiple={false}
                  name="select-team"
                  onChange={[Function]}
                  options={Array []}
                  placeholder="Select a Team"
                  value={0}
                >
                  <ForwardRef(SelectPicker)
                    arrowRenderer={[Function]}
                    backspaceRemoves={false}
                    className="css-6lbkok-StyledSelect eho28m20"
                    clearable={false}
                    deleteRemoves={false}
                    height={36}
                    multiple={false}
                    name="select-team"
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Select a Team"
                    value={0}
                  >
                    <SelectPicker
                      arrowRenderer={[Function]}
                      backspaceRemoves={false}
                      className="css-6lbkok-StyledSelect eho28m20"
                      clearable={false}
                      deleteRemoves={false}
                      forwardedRef={null}
                      height={36}
                      multiple={false}
                      name="select-team"
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Select a Team"
                      value={0}
                    >
                      <Select
                        arrowRenderer={[Function]}
                        autosize={true}
                        backspaceRemoves={false}
                        backspaceToRemoveMessage="Press backspace to remove {label}"
                        className="css-6lbkok-StyledSelect eho28m20"
                        clearAllText="Clear all"
                        clearRenderer={[Function]}
                        clearValueText="Clear value"
                        clearable={false}
                        closeOnSelect={true}
                        deleteRemoves={false}
                        delimiter=","
                        disabled={false}
                        escapeClearsValue={true}
                        filterOptions={[Function]}
                        height={36}
                        ignoreAccents={true}
                        ignoreCase={true}
                        inputProps={Object {}}
                        isLoading={false}
                        joinValues={false}
                        labelKey="label"
                        matchPos="any"
                        matchProp="any"
                        menuBuffer={0}
                        menuRenderer={[Function]}
                        multi={false}
                        multiple={false}
                        name="select-team"
                        noResultsText="No results found"
                        onBlurResetsInput={true}
                        onChange={[Function]}
                        onCloseResetsInput={true}
                        onSelectResetsInput={true}
                        openOnClick={true}
                        optionComponent={[Function]}
                        options={Array []}
                        pageSize={5}
                        placeholder="Select a Team"
                        removeSelected={true}
                        required={false}
                        rtl={false}
                        scrollMenuIntoView={true}
                        searchable={true}
                        simpleValue={false}
                        tabSelectsValue={true}
                        trimFilter={true}
                        value={0}
                        valueComponent={[Function]}
                        valueKey="value"
                      >
                        <div
                          className="Select css-6lbkok-StyledSelect eho28m20 is-searchable Select--single"
                        >
                          <div
                            className="Select-control"
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                          >
                            <span
                              className="Select-multi-value-wrapper"
                              id="react-select-3--value"
                            >
                              <div
                                className="Select-placeholder"
                              >
                                Select a Team
                              </div>
                              <AutosizeInput
                                aria-activedescendant="react-select-3--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                className="Select-input"
                                injectStyles={true}
                                minWidth="5"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                value=""
                              >
                                <div
                                  className="Select-input"
                                  style={
                                    Object {
                                      "display": "inline-block",
                                    }
                                  }
                                >
                                  <input
                                    aria-activedescendant="react-select-3--value"
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    aria-owns=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    role="combobox"
                                    style={
                                      Object {
                                        "boxSizing": "content-box",
                                        "width": "5px",
                                      }
                                    }
                                    value=""
                                  />
                                  <div
                                    style={
                                      Object {
                                        "height": 0,
                                        "left": 0,
                                        "overflow": "scroll",
                                        "position": "absolute",
                                        "top": 0,
                                        "visibility": "hidden",
                                        "whiteSpace": "pre",
                                      }
                                    }
                                  />
                                </div>
                              </AutosizeInput>
                            </span>
                            <span
                              className="Select-arrow-zone"
                              onMouseDown={[Function]}
                            >
                              <span
                                className="icon-arrow-down"
                              />
                            </span>
                          </div>
                        </div>
                      </Select>
                    </SelectPicker>
                  </ForwardRef(SelectPicker)>
                </StyledSelect>
              </SelectControl>
              <Tooltip
                title="Create a team"
              >
                <Button
                  borderless={true}
                  className="tip"
                  disabled={false}
                  icon="icon-circle-add"
                  onClick={[Function]}
                  title="Create a team"
                  type="button"
                >
                  <Tooltip
                    title="Create a team"
                  >
                    <StyledButton
                      aria-disabled={false}
                      borderless={true}
                      className="tip tip"
                      disabled={false}
                      onClick={[Function]}
                      role="button"
                      title="Create a team"
                      type="button"
                    >
                      <Component
                        aria-disabled={false}
                        className="tip tip css-1v8ytf5-StyledButton-getColors eqrebog0"
                        onClick={[Function]}
                        role="button"
                        title="Create a team"
                        type="button"
                      >
                        <button
                          aria-disabled={false}
                          className="tip tip css-1v8ytf5-StyledButton-getColors eqrebog0"
                          onClick={[Function]}
                          role="button"
                          title="Create a team"
                          type="button"
                        >
                          <ButtonLabel
                            borderless={true}
                          >
                            <Component
                              borderless={true}
                              className="css-uthd1f-ButtonLabel eqrebog1"
                            >
                              <span
                                className="css-uthd1f-ButtonLabel eqrebog1"
                              >
                                <Icon
                                  hasChildren={false}
                                >
                                  <Component
                                    className="css-ljhpxy-Icon eqrebog2"
                                    hasChildren={false}
                                  >
                                    <span
                                      className="css-ljhpxy-Icon eqrebog2"
                                    >
                                      <StyledInlineSvg
                                        size="16px"
                                        src="icon-circle-add"
                                      >
                                        <InlineSvg
                                          className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                          size="16px"
                                          src="icon-circle-add"
                                        >
                                          <StyledSvg
                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                            height="16px"
                                            viewBox={Object {}}
                                            width="16px"
                                          >
                                            <svg
                                              className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                              height="16px"
                                              viewBox={Object {}}
                                              width="16px"
                                            >
                                              <use
                                                href="#test"
                                                xlinkHref="#test"
                                              />
                                            </svg>
                                          </StyledSvg>
                                        </InlineSvg>
                                      </StyledInlineSvg>
                                    </span>
                                  </Component>
                                </Icon>
                              </span>
                            </Component>
                          </ButtonLabel>
                        </button>
                      </Component>
                    </StyledButton>
                  </Tooltip>
                </Button>
              </Tooltip>
            </div>
          </TeamSelectInput>
        </div>
        <div>
          <Button
            disabled={true}
            priority="primary"
          >
            <StyledButton
              aria-disabled={true}
              aria-label="Create Project"
              disabled={true}
              href={null}
              onClick={[Function]}
              priority="primary"
              role="button"
              to={null}
            >
              <Component
                aria-disabled={true}
                aria-label="Create Project"
                className="css-bo8dlg-StyledButton-getColors eqrebog0"
                href={null}
                onClick={[Function]}
                role="button"
                to={null}
              >
                <button
                  aria-disabled={true}
                  aria-label="Create Project"
                  className="css-bo8dlg-StyledButton-getColors eqrebog0"
                  href={null}
                  onClick={[Function]}
                  role="button"
                  to={null}
                >
                  <ButtonLabel
                    priority="primary"
                  >
                    <Component
                      className="css-ga4b18-ButtonLabel eqrebog1"
                      priority="primary"
                    >
                      <span
                        className="css-ga4b18-ButtonLabel eqrebog1"
                      >
                        Create Project
                      </span>
                    </Component>
                  </ButtonLabel>
                </button>
              </Component>
            </StyledButton>
          </Button>
        </div>
      </form>
    </CreateProjectForm>
  </div>
</CreateProject>
`;
